name: CD
on:
  push:
    branches: [ main ]
jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - uses: aws-actions/amazon-ecr-login@v2

      - name: Build & push images (tag latest + main-SHA)
        run: |
          SHA="${{ github.sha }}"
          for svc in scanner action ai_insights; do
            REPO="${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/levelup-costops-${svc%_*}"
            docker build -t "$REPO:main-$SHA" -t "$REPO:latest" "lambdas/$svc"
            docker push "$REPO:main-$SHA"
            docker push "$REPO:latest"
          done

      - name: Install Terraform
        run: |
          sudo apt-get update && sudo apt-get install -y unzip
          curl -Ls https://releases.hashicorp.com/terraform/1.7.5/terraform_1.7.5_linux_amd64.zip -o tf.zip
          sudo unzip -o tf.zip -d /usr/local/bin
          rm tf.zip

      - name: Terraform plan/apply
        working-directory: terraform
        run: |
          if [ ! -f terraform.tfvars ]; then cp terraform.tfvars.example terraform.tfvars; fi
          sed -i 's/scanner_image_tag *=.*/scanner_image_tag = "main-'${{ github.sha }}'"/' terraform.tfvars
          sed -i 's/action_image_tag *=.*/action_image_tag = "main-'${{ github.sha }}'"/' terraform.tfvars
          sed -i 's/ai_image_tag *=.*/ai_image_tag = "main-'${{ github.sha }}'"/' terraform.tfvars
          terraform init
          terraform plan -var-file=terraform.tfvars -out=plan.out
          terraform apply -auto-approve plan.out
